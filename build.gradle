plugins {
    id 'fabric-loom' version '1.8-SNAPSHOT'
    id 'maven-publish'
    id "me.modmuss50.mod-publish-plugin" version "0.8.3"
}

publishMods {
    file = remapJar.archiveFile
    changelog = project.file("CHANGELOG.MD").toString()
    type = STABLE
    modLoaders.add("fabric")
    version = "v" + project.version + "+" + stonecutter.current.version

    curseforge {
        projectId = "1153034"
        projectSlug = "durability-rework"
        accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
        minecraftVersions.add("1.21.4")
        requires("fabric-api", "owo-lib")
        optional("modmenu")
    }
    modrinth {
        projectId = "IR8T4xSw"
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        minecraftVersions.add("1.21.4")
        requires("fabric-api", "owo-lib")
        optional("modmenu")
    }
    github {
        repository = "sylenthuntress/Unbreakable"
        accessToken = providers.environmentVariable("GITHUB_TOKEN")
        commitish = "main"
    }
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    mods {
        "unbreaking" {
            sourceSet sourceSets.main
        }
    }

    runConfigs.all {
        ideConfigGenerated true // Run configurations are not created for subprojects by default
        runDir "../../run" // Use a shared run folder and create separate worlds
    }

}

repositories {
    maven { url = "https://api.modrinth.com/maven" }
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
    maven { url 'https://maven.wispforest.io/releases/' }
}

dependencies {
    minecraft "com.mojang:minecraft:${stonecutter.current.version}"
    mappings "net.fabricmc:yarn:${property('yarn_mappings')}:v2"
    modImplementation "net.fabricmc:fabric-loader:${property('loader_version')}"
    modImplementation("net.fabricmc.fabric-api:fabric-api:${property('fabric_version')}")
    annotationProcessor modImplementation("io.wispforest:owo-lib:${property('owo_version')}")
    modImplementation("com.terraformersmc:modmenu:${property('modmenu_version')}")
    include "io.wispforest:owo-sentinel:${property('owo_version')}"
}

processResources {
    inputs.property "minecraft_version", stonecutter.current.version
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": stonecutter.current.version,
                "loader_version": property('loader_version'),
                "fabric_version": property('fabric_version'),
                "owo_version": property('owo_version'),
                "modmenu_version": property('modmenu_version')
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {

    }
}